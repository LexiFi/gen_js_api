[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
let (sep : string) = Ojs.string_of_js (Ojs.get Imports.path "sep")
let (dirname : string -> string) =
  fun x1 ->
    Ojs.string_of_js
      (Ojs.call Imports.path "dirname" [|(Ojs.string_to_js x1)|])
let (extname : string -> string) =
  fun x2 ->
    Ojs.string_of_js
      (Ojs.call Imports.path "extname" [|(Ojs.string_to_js x2)|])
let (is_absolute : string -> bool) =
  fun x3 ->
    Ojs.bool_of_js
      (Ojs.call Imports.path "isAbsolute" [|(Ojs.string_to_js x3)|])
let (join : string list -> string) =
  fun x4 ->
    Ojs.string_of_js
      (Ojs.call Imports.path "join" [|(Ojs.list_to_js Ojs.string_to_js x4)|])
let (normalize : string -> string) =
  fun x6 ->
    Ojs.string_of_js
      (Ojs.call Imports.path "normalize" [|(Ojs.string_to_js x6)|])
type parse_result =
  {
  dir: string ;
  root: string ;
  base: string ;
  name: string ;
  ext: string }
let rec (parse_result_of_js : Ojs.t -> parse_result) =
  fun x8 ->
    {
      dir = (Ojs.string_of_js (Ojs.get x8 "dir"));
      root = (Ojs.string_of_js (Ojs.get x8 "root"));
      base = (Ojs.string_of_js (Ojs.get x8 "base"));
      name = (Ojs.string_of_js (Ojs.get x8 "name"));
      ext = (Ojs.string_of_js (Ojs.get x8 "ext"))
    }
and (parse_result_to_js : parse_result -> Ojs.t) =
  fun x7 ->
    Ojs.obj
      [|("dir", (Ojs.string_to_js x7.dir));("root",
                                             (Ojs.string_to_js x7.root));
        ("base", (Ojs.string_to_js x7.base));("name",
                                               (Ojs.string_to_js x7.name));
        ("ext", (Ojs.string_to_js x7.ext))|]
let (parse : string -> parse_result) =
  fun x9 ->
    parse_result_of_js
      (Ojs.call Imports.path "parse" [|(Ojs.string_to_js x9)|])
