include
  (((struct
       [@@@js.dummy "!! This code has been generated by gen_js_api !!"]
       [@@@ocaml.warning "-7-32-39"]
       module T =
         struct
           let (log : 'a -> unit) =
             fun x1 ->
               ignore
                 (Ojs.call (Ojs.get Ojs.global "console") "log"
                    [|(Obj.magic x1)|])
           let (log2 : 'a -> 'b -> unit) =
             fun x2 ->
               fun x3 ->
                 ignore
                   (Ojs.call Ojs.global "jsLog2"
                      [|(Obj.magic x2);(Obj.magic x3)|])
         end
       module M =
         struct
           type t = Ojs.t
           let rec (t_of_js : Ojs.t -> t) = fun x5 -> x5
           and (t_to_js : t -> Ojs.t) = fun x4 -> x4
         end
     end)[@merlin.hide ]) :
    sig
      module T :
      ((sig
          val log : 'a -> unit[@@js.global ]
          val log2 : 'a -> 'b -> unit[@@js.global "jsLog2"]
        end)[@js.scope "console"])
      module M : sig type t end
    end)
