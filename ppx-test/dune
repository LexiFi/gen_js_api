(rule
 (targets extension.ml.result)
 (deps extension.ml)
 (action
  (run ppx/main.exe --impl %{deps} -o %{targets})))

(rule
 (alias runtest)
 (package gen_js_api)
 (action
  (diff expected/extension.ml extension.ml.result)))

(rule
 (targets issues.ml.result)
 (deps issues.ml)
 (action
  (run ppx/main.exe --impl %{deps} -o %{targets})))

(rule
 (alias runtest)
 (package gen_js_api)
 (enabled_if
  (>= %{ocaml_version} 4.09))
 (action
  (diff expected/issues.ml issues.ml.result)))

(rule
 (targets types.ml.result)
 (deps types.ml)
 (action
  (run ppx/main.exe --impl %{deps} -o %{targets})))

(rule
 (alias runtest)
 (package gen_js_api)
 (enabled_if
  (>= %{ocaml_version} 4.09))
 (action
  (diff expected/types.ml types.ml.result)))

(rule
 (targets binding_automatic.ml)
 (deps binding_automatic.mli)
 (action
  (run gen_js_api %{deps} -o %{targets})))

(rule
 (alias runtest)
 (package gen_js_api)
 (action
  (diff expected/binding_automatic.ml binding_automatic.ml)))

(rule
 (targets binding_explicitly_automatic.ml)
 (deps binding_explicitly_automatic.mli)
 (action
  (run gen_js_api %{deps} -o %{targets})))

(rule
 (alias runtest)
 (package gen_js_api)
 (action
  (diff binding_automatic.ml binding_explicitly_automatic.ml)))

(rule
 (targets binding_manual.ml)
 (deps binding_manual.mli)
 (action
  (run gen_js_api %{deps} -o %{targets})))

(rule
 (targets binding.ml)
 (deps binding.mli)
 (action
  (run gen_js_api %{deps} -o %{targets})))

(rule
 (alias runtest)
 (package gen_js_api)
 (action
  (diff expected/binding.ml binding.ml)))

(rule
 (targets scoped.ml)
 (deps scoped.mli)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (alias runtest)
 (action
  (diff expected/scoped.ml scoped.ml)))

(rule
 (targets union_and_enum.ml)
 (deps union_and_enum.mli)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (alias runtest)
 (action
  (diff expected/union_and_enum.ml union_and_enum.ml)))

(rule
 (targets issues_mli.ml)
 (deps issues_mli.mli)
 (action
  (run gen_js_api %{deps} -o %{targets})))

(rule
 (alias runtest)
 (package gen_js_api)
 (action
  (diff expected/issues_mli.ml issues_mli.ml)))

(rule
 (targets recursive_module.ml)
 (deps recursive_module.mli)
 (action
  (run gen_js_api %{deps} -o %{targets})))

(rule
 (alias runtest)
 (package gen_js_api)
 (action
  (diff expected/recursive_module.ml recursive_module.ml)))

(library
 (name test_library)
 (libraries ojs)
 (preprocess
  (pps gen_js_api.ppx))
 (modes byte)
 (modules binding_automatic binding_manual extension issues types))

(rule
 (alias runtest)
 (package gen_js_api)
 (deps test_library.cma)
 (action
  (echo "Successfully compile test_library")))
